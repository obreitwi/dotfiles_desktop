#!/usr/bin/env bash
cd "$HOME"

# Yes, I know this is very hacky and should be systemd units, but it gets the job done
file_update_keyboard="${HOME}/.local/bin/daemon_restore_keyboard_settings_as_user"
if [ -f "${file_update_keyboard}" ]; then
    "${file_update_keyboard}" &

    pid_kb_update=$!

    # let the updater run once
    (sleep 2 && kill -CONT ${pid_kb_update}) &

    unset pid_kb_update
elif ! [ -e /etc/NIXOS ]; then # manual setup if we are not on nixOS
    # xsetroot -cursor_name left_ptr &
    setxkbmap us\
      -variant altgr-intl \
      -model pc105\
      -option compose:menu \
      -option lv3:ralt_switch \
      -option eurosign:e \
      -option nbsp:level3n \
      -option caps:escape
    # -option terminate:ctrl_alt_bkspc \

    xmodmap ~/.Xmodmap &
fi

# Probably not needed anymore (yay), so just disabled for now.
if false; then
    # Yes, I know this is very hacky and should be systemd units, but it gets the job done
    file_html_to_markdown_link="${HOME}/.local/bin/daemon_html_to_markdown_link"
    if [ -f "${file_html_to_markdown_link}" ]; then
        "${file_html_to_markdown_link}" &
    fi
fi

# xrdb ~/.Xresources &
if [ -f ~/.Xdefaults ]; then 
    xrdb ~/.Xdefaults &
fi

if [[ "$(hostname)" == "mimir" ]]; then
    export LIBVA_DRIVER_NAME=vdpau
fi

if ! [ -e /etc/NIXOS ] && command -v picom &>/dev/null; then
    picom_args=(-b)
    # If we use nvidia as the main renderer -> compose with glx backend
    if [[ "$(hostname)" == "mimir" ]] && [ "$(glxinfo | grep "OpenGL renderer")" = "OpenGL renderer string: NVIDIA RTX A1000 Laptop GPU/PCIe/SSE2" ]; then
        picom_args+=(--backend glx --xrender-sync-fence)
        # Trying out xrender backend, 10-04-23 17:23:14
        # Tearing and windows disappearing, 22.04.2023 22:49:59
        # picom_args+=(--backend xrender)
    fi
    picom "${picom_args[@]}"
fi

# increase repeat rate
if ! [ -e /etc/NIXOS ]; then
    xset rate 200 75
    # no beep
    xset b off
fi

if command -v keynav &>/dev/null; then
    keynav &
fi

### display
if command -v autorandr &>/dev/null; then
    autorandr "${AUTORANDR_PROFILE:+--load ${AUTORANDR_PROFILE}}" ${AUTORANDR_PROFILE:--c}
fi

### additional-display
# Check if we are currently running in nvidia-standalone mode
if [ -f /etc/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf ]; then
    xrandr --setprovideroutputsource modesetting NVIDIA-0
    autorandr -l nvidia-rzo-dual-right
fi
# unset main_provider
###

if which gnome-keyring-daemon >/dev/null; then
    source <(gnome-keyring-daemon --components=secrets -r -d | sed "s:^:export :g")
fi

### virtualbox
if ! [ -e /etc/NIXOS ] && command -v VBoxClient-all &>/dev/null; then
    VBoxClient-all &
fi

if command -v feh &>/dev/null && [ -e "${HOME}/wallpaper/current" ]; then
    feh  --bg-fill "${HOME}/wallpaper/current"
fi

if ! [ -e /etc/NIXOS ] && command -v unclutter &>/dev/null; then
    killall unclutter
    unclutter &
fi

if command -v urxvtd >/dev/null; then
    # killall urxvtd # -o kills urxvtd automatically when X is restarted
    urxvtd -q -o -f
fi

### autolock
### autolock @ lark,gordon
# auto lock screen after 10 minutes of idle
if command -v sinac &>/dev/null; then
    ~/git/dotfiles_desktop/scripts/autolock.sh &
fi
### autolock @ mimir
# Lock screen after 5 minutes of idle
xset s 300

if command -v xss-lock &>/dev/null; then
    xss-lock -- slock &
fi

if command -v udiskie &>/dev/null; then
   udiskie --tray &
fi

# start sccache server
if command -v sccache &>/dev/null; then
    sccache --stop-server &> /dev/null
    SCCACHE_IDLE_TIMEOUT=0 sccache --start-server &> /dev/null
fi

if [ -f /etc/X11/xinit/xinitrc.d/50-systemd-user.sh ]; then
    source /etc/X11/xinit/xinitrc.d/50-systemd-user.sh
fi
systemctl --user import-environment DISPLAY XAUTHORITY DBUS_SESSION_BUS_ADDRESS
systemctl --no-block --user start xsession.target

### brightness
# if AC on then full brightness, otherwise 25
if [ "$(cat /sys/class/power_supply/AC/online)" -eq 1 ]; then
    backlight 100
else
    backlight 25
fi


### mouse
### mouse @ mucku-disabled
# Currently G502 is configured with too high DPI
if xinput list "pointer:Logitech G502" &>/dev/null; then
    # xinput set-prop 'pointer:Logitech G502' 'libinput Accel Speed' -0.5
    xinput set-prop "pointer:Logitech G502" "Coordinate Transformation Matrix" .5 0 0 0 0.5 0 0 0 1
fi

###

# disable mouse acceleration
xset m 0 0

if which synclient >/dev/null; then
    ~/git/dotfiles_desktop/scripts/trackpad-toggle.sh &
fi

if [ -f ~/.config/gnupg/gpg-agent.sh ]; then
    source ~/.config/gnupg/gpg-agent.sh
fi

if command -v lxpolkit &>/dev/null; then
    lxpolkit &
fi

tmpfile="$(mktemp)"
lsusb -v 2>/dev/null 1>"${tmpfile}"

# check if mx518 is connected and if so swap buttons
if awk 'BEGIN { rc=1 } $1 == "idVendor" { vendor = $2 } $1 == "idProduct" && vendor == "0x046d" && $2 == "0xc08e" { rc=0 } END { exit rc }' "${tmpfile}"; then
    # The following settings disable scroll capabilities in firefox, but stillwork in chromium -> strange
    # xmodmap -e 'pointer = 1 9 3 6 7 10 11 2 8 12 4 5'
    xmodmap -e 'pointer = 1 8 3 4 5 6 7 2 9 10 11 12'
elif awk 'BEGIN { rc=1 } $1 == "idVendor" { vendor = $2 } $1 == "idProduct" && vendor == "0x046d" && $2 == "0xc068" { rc=0 } END { exit rc }' "${tmpfile}"; then
    # remap thumb buttons of broken g500 to mouse wheel
    xmodmap -e 'pointer = 1 2 3 6 7 8 9 5 4'
fi
rm "${tmpfile}"

# dpi
# xrandr --dpi 96

# network-tray
if command -v iwgtk >/dev/null && command -v snixembed >/dev/null; then
    snixembed --fork
    iwgtk -i &
fi

# Use pinentry-rofi if available
if command -v pinentry-rofi>/dev/null; then
    PINENTRY_PROGRAM=$(which pinentry-rofi) # TODO: Switch out 'which'
    export PINENTRY_PROGRAM
fi

# Start easyeffects equalizer if available
if command -v easyeffects>/dev/null; then
    easyeffects --gapplication-service &> /dev/null &
fi

# try to remove the state file so that things that might have changed during
# shutdown (e.g. number of monitors) gets recognized correctly
rm -f $HOME/.xmonad/xmonad.state
if [ -f ~/.xmonad/bin/xmonad-x86_64-linux ]; then
    exec ~/.xmonad/bin/xmonad-x86_64-linux
elif [ -f ~/.xmonad/bin/xmonad ]; then
    exec ~/.xmonad/bin/xmonad
else
    exec xmonad
fi
